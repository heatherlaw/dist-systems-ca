syntax = "proto3";

package ticket;

service SupportTicket {
    rpc CreateTicket(CreateRequest) returns(CreateResponse); //create ticket - unary RPC
    rpc UpdateTicket(UpdateRequest) returns(UpdateResponse); //updates ticket - unary RPC
    rpc DeleteTicket(DeleteRequest) returns(DeleteResponse); //deletes ticket - unary RPC
    rpc TrackTicket(TrackRequest) returns(stream TrackResponse); //returns up to date ticket information - server streaming RCP
    rpc GetTickets(TicketRequest) returns(stream TicketList); //allows staff to request a list of open tickets for the user - server streaming RCP
}

//sends information to create new ticket
message CreateRequest {
    string cust_id = 1; //unique ID for customer
    string staff_id = 2; //unique ID for staff
    string ticket_date = 3; //date of ticket creation
}

//confirms ticket creation and returns generated unique ticket ID number
message CreateResponse {
    string ticket_id = 1; //unique ticket ID created and returned
}

//sends updated information to ticket
message UpdateRequest {
    string ticket_id = 1; 
    string ticket_update = 2; //string updates to be added to ticket
}

//confirms ticket update
message UpdateResponse {
    string update_confirmation = 1; //confirmation that ticket was updated
}

//request to delete ticket
message DeleteTicket {
    string ticket_id = 1; 
    string staff_id = 2; //staff ID required for accountability
}

//confirms ticket deletion
message DeleteResponse {
    string delete_confirmation = 1; //confirmation of the ticket deletion
}

//request for employee to track ticket
message TrackTicket {
    string ticket_id = 1; 
    string staff_id = 2;
}

//returns information for tracked ticket as it is updated 
message TrackResponse {
    string tracker_update = 1; 
}

//staff requesting ticket list
message TicketRequest {
    string cust_id = 1; 
}

//returning ticket list
message TicketList {
    stream tickets = 1; //list of all tickets connected to this customer
}